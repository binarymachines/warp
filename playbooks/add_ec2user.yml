#
# add_ec2user.yml
# 
# Create a new user on existing EC2 instances
# 
# pass the parameters host_filter and userid on the command line, with the -e (--extra-vars) argument
# example:
#
# ansible-playbook -i '<target_ip>,' --extra-vars '{"userid":"<new_username>", "pubkey":"<public key file>"}' add_ec2user.yml
#
#
---
- hosts: all
  gather_facts: no
  sudo: yes
  vars:
    newuser: "{{ userid }}"   
    pubkeyfile: "{{ pubkey }}"
    new_user_key: "{{lookup('file', pubkeyfile)}}"
    authorized_keys_file: "/home/{{newuser}}/.ssh/authorized_keys"

  tasks:

  - debug: msg="SSH public key is {{new_user_key}}"

  - debug: msg="remote authorized_keys path is {{authorized_keys_file}}"

  - name: "FIX: ubuntu 16.04 LTS is missing some required modules"
    raw: apt-get install python-minimal aptitude -y
    become: true
    become_user: root
    

  - name: Create admin group if it doesn't exist
    group: name=admin system=yes state=present
    become: true
    become_user: root

  - name:  Add the user with a bash shell, as a member of the admin group
    user: name={{newuser}} shell=/bin/bash groups=admin append=yes
    become: true
    become_user: root
    
  - name: Copy sudoers file for safety
    command: cp -f /etc/sudoers /etc/sudoers.tmp
    become: true
    become_user: root

  - name: Create sudoers file backup
    command: cp -f /etc/sudoers /etc/sudoers.bak
    become: true
    become_user: root

  - name: make sure we can sudo as admin group
    lineinfile: dest=/etc/sudoers.tmp state=present regexp='^%admin' line='%admin ALL=(ALL) ALL'
    become: true
    become_user: root

  - name: also make sure ssh-agent works via sudo
    lineinfile: dest=/etc/sudoers.tmp state=present regexp='^Defaults env_keep\+\=SSH_AUTH_SOCK' line='Defaults env_keep+=SSH_AUTH_SOCK'
    become: true
    become_user: root

  - name: Final sudoers file check
    shell: visudo -q -c -f /etc/sudoers.tmp && cp -f /etc/sudoers.tmp /etc/sudoers
    become: true
    become_user: root

  - name: update authorized_keys
    authorized_key: user="{{newuser}}" key="{{new_user_key}}" path="{{ authorized_keys_file }}" state=present
    become: true
    become_user: root


